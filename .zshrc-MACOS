# Run Zellij first
if [[ -z "$ZELLIJ" ]]; then
    if [[ "$ZELLIJ_AUTO_ATTACH" == "true" ]]; then
        zellij attach -c
    else
        zellij
    fi

    if [[ "$ZELLIJ_AUTO_EXIT" == "true" ]]; then
        exit
    fi
fi

# Uncomment below to enable profiling
# zmodload zsh/zprof

# Set P10k Theme
ZSH_THEME="powerlevel10k/powerlevel10k"

# Disable COMPFIX for Mac Security Check
ZSH_DISABLE_COMPFIX=true

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block, everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
# export PATH=/home/jslouis/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin

# Disable Automatic Update Prompt
#DISABLE_UPDATE_PROMPT=true
zstyle ':omz:update' mode auto

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Add for Tmux
export TERM="xterm-256color"

###### TEMP FIX FOR NVIDIA Micro Freezes #######
export __GL_MaxFramesAllowed=1
################################################

# Go Stuff
export GOPATH=$HOME/Projects/go
export PATH=$PATH:$GOPATH/bin
export GOROOT=/usr/local/go
export PATH=$PATH:$GOROOT/bin

# Node Stuff
#export PATH=$PATH:$HOME/.local/node/bin

# Rafay Stuff
export PATH=$PATH:$HOME/.rctl/bin
# GNU tar
export PATH=/usr/local/opt/gnu-tar/libexec/gnubin:$PATH

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
HIST_STAMPS="mm/dd/yyyy"

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
#    aws
    common-aliases
#    docker
#    docker-compose
    extract
    kubectl
    gitfast
#    golang
#    minikube
    sudo
#    tmux
#    vscode
    zsh-syntax-highlighting
  )

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
    export EDITOR='vim'
else
    export EDITOR='mvim'
fi

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
alias zshconfig="vim ~/.zshrc"
alias ohmyzsh="vim ~/.oh-my-zsh"
alias ll="ls -lah"

# Powerlevel10k
source $ZSH_CUSTOM/themes/powerlevel10k/powerlevel10k.zsh-theme

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

#------ NodeJs ------#

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
#export PATH="$PATH:$HOME/.rvm/bin"

#export NVM_DIR="$HOME/.nvm"
#[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
#[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion


#------ PyEnv -----#
# Python Stuff
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv init --path)"
export PYENV_VIRTUALENV_DISABLE_PROMPT=1

# MAC GPG
export GPG_TTY=$TTY

# K8
KUBE_EDITOR=vim

# AZ
#source /usr/local/etc/bash_completion.d/az
# source $HOME/.helm_zsh_completion

#----- ZSH Auto-Completions -----#
if type brew &>/dev/null; then
FPATH=$(brew --prefix)/share/zsh-completions:$FPATH

autoload -Uz compinit
compinit
fi
complete -C '/usr/local/bin/aws_completer' aws

#----- Aditional Completions -----#
fpath=($ZSH/functions $ZSH/completions $fpath)

#----- SSH Completion ------#
h=()
if [[ -r ~/.ssh/config ]]; then
  h=($h ${${${(@M)${(f)"$(cat ~/.ssh/config)"}:#Host *}#Host }:#*[*?]*})
fi
if [[ $#h -gt 0 ]]; then
  zstyle ':completion:*:ssh:*' hosts $h
  zstyle ':completion:*:slogin:*' hosts $h
fi

#----- Utility Funcs -----#
urlencode() {
    setopt localoptions extendedglob
    input=( ${(s::)1} )
    print ${(j::)input/(#b)([^A-Za-z0-9_.\!~*\'\(\)-])/%${(l:2::0:)$(([##16]#match))}}
}

#----- KUBECONFIG Loading -----#
loadkubeconfigs() {
  kubeconfigs=""

  for kubeconfig in "$HOME/.kube/config.d/"*; do
    kubeconfigs+="$kubeconfig:"
  done
  export KUBECONFIG="$HOME/.kube/config:$kubeconfigs"
}

#----------------------------#
#--- KUBE ENV Vars
export KUBE_EDITOR=vim
loadkubeconfigs

#--- K9s
export XDG_CONFIG_HOME=$HOME/.xdg_config

#--- Kubectl v1.24.0-beta.0
export PATH=/Users/${USER}/.kubernetes/client/bin:$PATH

# Terrafrom v.0.13
# export PATH="/usr/local/opt/terraform@0.13/bin:$PATH"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/${USER}/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/${USER}/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/${USER}/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/${USER}/google-cloud-sdk/completion.zsh.inc'; fi

#autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/vault vault

#--- CUSTOM FUNCTIONS
timezsh() {
  shell=${1-$SHELL}
  for i in $(seq 1 10); do /usr/bin/time $shell -i -c exit; done
}

